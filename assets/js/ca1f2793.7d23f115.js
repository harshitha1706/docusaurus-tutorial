"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4279],{7425:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>a,contentTitle:()=>d,default:()=>o,frontMatter:()=>t,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"relational-modeling-slides","title":"Relational Data Modeling: An Introduction","description":"What is Relational Data Modeling?","source":"@site/docs/relational-modeling-slides.md","sourceDirName":".","slug":"/relational-modeling-slides","permalink":"/docusaurus-tutorial/docs/relational-modeling-slides","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/relational-modeling-slides.md","tags":[],"version":"current","frontMatter":{}}');var l=i(4848),r=i(8453);const t={},d="Relational Data Modeling: An Introduction",a={},h=[{value:"What is Relational Data Modeling?",id:"what-is-relational-data-modeling",level:2},{value:"Key Concepts",id:"key-concepts",level:2},{value:"Types of Keys",id:"types-of-keys",level:2},{value:"Database Schema Example",id:"database-schema-example",level:2},{value:"Relationships Between Entities",id:"relationships-between-entities",level:2},{value:"Example: One-to-One Relationship",id:"example-one-to-one-relationship",level:2},{value:"Example: One-to-Many Relationship",id:"example-one-to-many-relationship",level:2},{value:"Example: Many-to-Many Relationship",id:"example-many-to-many-relationship",level:2},{value:"Database Design Process",id:"database-design-process",level:2},{value:"Entity-Relationship (ER) Modeling",id:"entity-relationship-er-modeling",level:2},{value:"ER Diagram Example",id:"er-diagram-example",level:2},{value:"Converting ER Diagrams to Relations",id:"converting-er-diagrams-to-relations",level:2},{value:"Example: Converting ER to Relations",id:"example-converting-er-to-relations",level:2},{value:"Normalization",id:"normalization",level:2},{value:"First Normal Form (1NF)",id:"first-normal-form-1nf",level:2},{value:"Second Normal Form (2NF)",id:"second-normal-form-2nf",level:2},{value:"Third Normal Form (3NF)",id:"third-normal-form-3nf",level:2},{value:"Denormalization",id:"denormalization",level:2},{value:"Constraints in Relational Model",id:"constraints-in-relational-model",level:2},{value:"Example Database Schema with Constraints",id:"example-database-schema-with-constraints",level:2},{value:"Real-World Example: E-Commerce Database",id:"real-world-example-e-commerce-database",level:2},{value:"Best Practices in Relational Modeling",id:"best-practices-in-relational-modeling",level:2},{value:"Relational Model Advantages",id:"relational-model-advantages",level:2},{value:"Common Challenges in Relational Modeling",id:"common-challenges-in-relational-modeling",level:2},{value:"Beyond Traditional Relational Model",id:"beyond-traditional-relational-model",level:2},{value:"Summary",id:"summary",level:2},{value:"Practice Exercises",id:"practice-exercises",level:2}];function c(n){const e={code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...n.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(e.header,{children:(0,l.jsx)(e.h1,{id:"relational-data-modeling-an-introduction",children:"Relational Data Modeling: An Introduction"})}),"\n",(0,l.jsx)(e.h2,{id:"what-is-relational-data-modeling",children:"What is Relational Data Modeling?"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Process of organizing data into related tables (relations)"}),"\n",(0,l.jsx)(e.li,{children:"Foundation of relational database design"}),"\n",(0,l.jsx)(e.li,{children:"Based on relational theory developed by E.F. Codd"}),"\n",(0,l.jsx)(e.li,{children:"Focuses on data integrity, consistency, and reducing redundancy"}),"\n",(0,l.jsx)(e.li,{children:"Maps real-world entities and relationships to tables"}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"key-concepts",children:"Key Concepts"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Entity"}),": Person, place, thing, or concept about which we store data"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Attribute"}),": Property or characteristic of an entity"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Relation"}),": A table that stores data about entities"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Tuple"}),": A row in a relation (represents a single entity instance)"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Schema"}),": Structure of a database (relations, attributes, constraints)"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Key"}),": Attribute(s) that uniquely identify tuples in a relation"]}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"types-of-keys",children:"Types of Keys"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Superkey"}),": Set of attributes that uniquely identifies each tuple"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Candidate Key"}),": Minimal superkey (no unnecessary attributes)"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Primary Key"}),": Candidate key chosen to uniquely identify tuples"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Foreign Key"}),": Attribute(s) that references a primary key in another relation"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Composite Key"}),": Key consisting of multiple attributes"]}),"\n"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Example"}),": In a Student table, ",(0,l.jsx)(e.code,{children:"StudentID"})," might be the primary key, while in a Course_Enrollment table, (",(0,l.jsx)(e.code,{children:"StudentID"}),", ",(0,l.jsx)(e.code,{children:"CourseID"}),") might form a composite primary key."]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"database-schema-example",children:"Database Schema Example"}),"\n",(0,l.jsx)(e.p,{children:"Let's use an academic database example:"}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"STUDENT"})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"StudentID (PK)"}),"\n",(0,l.jsx)(e.li,{children:"FirstName"}),"\n",(0,l.jsx)(e.li,{children:"LastName"}),"\n",(0,l.jsx)(e.li,{children:"Email"}),"\n",(0,l.jsx)(e.li,{children:"DOB"}),"\n",(0,l.jsx)(e.li,{children:"DepartmentID (FK)"}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"DEPARTMENT"})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"DepartmentID (PK)"}),"\n",(0,l.jsx)(e.li,{children:"DepartmentName"}),"\n",(0,l.jsx)(e.li,{children:"Building"}),"\n",(0,l.jsx)(e.li,{children:"Budget"}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"COURSE"})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"CourseID (PK)"}),"\n",(0,l.jsx)(e.li,{children:"Title"}),"\n",(0,l.jsx)(e.li,{children:"Credits"}),"\n",(0,l.jsx)(e.li,{children:"DepartmentID (FK)"}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"ENROLLMENT"})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"StudentID (PK, FK)"}),"\n",(0,l.jsx)(e.li,{children:"CourseID (PK, FK)"}),"\n",(0,l.jsx)(e.li,{children:"Semester"}),"\n",(0,l.jsx)(e.li,{children:"Year"}),"\n",(0,l.jsx)(e.li,{children:"Grade"}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"relationships-between-entities",children:"Relationships Between Entities"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"One-to-One (1:1)"}),": Entity in relation A relates to at most one entity in relation B"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsxs)(e.strong,{children:["One-to-Many (1",":N",")"]}),": Entity in relation A relates to multiple entities in relation B"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsxs)(e.strong,{children:["Many-to-Many (M",":N",")"]}),": Multiple entities in relation A relate to multiple entities in relation B"]}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"example-one-to-one-relationship",children:"Example: One-to-One Relationship"}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"PROFESSOR"})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"ProfessorID (PK)"}),"\n",(0,l.jsx)(e.li,{children:"Name"}),"\n",(0,l.jsx)(e.li,{children:"Department"}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"OFFICE"})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"OfficeID (PK)"}),"\n",(0,l.jsx)(e.li,{children:"Building"}),"\n",(0,l.jsx)(e.li,{children:"RoomNumber"}),"\n",(0,l.jsx)(e.li,{children:"ProfessorID (FK) - unique constraint enforces 1:1"}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:"Each professor has at most one office, and each office belongs to at most one professor."}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"One-to-One Relationship Diagram:"})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{children:"PROFESSOR                    OFFICE\n+-----------+               +----------+\n|ProfessorID|\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500>|OfficeID  |\n|Name       |               |Building  |\n|Department |<--------------+RoomNumber|\n+-----------+               |ProfessorID|\n                            +----------+\n"})}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"example-one-to-many-relationship",children:"Example: One-to-Many Relationship"}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"DEPARTMENT"})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"DepartmentID (PK)"}),"\n",(0,l.jsx)(e.li,{children:"DepartmentName"}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"STUDENT"})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"StudentID (PK)"}),"\n",(0,l.jsx)(e.li,{children:"Name"}),"\n",(0,l.jsx)(e.li,{children:"DepartmentID (FK)"}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:"Each department can have many students, but each student belongs to only one department."}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"One-to-Many Relationship Diagram:"})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{children:"DEPARTMENT                   STUDENT\n+------------+               +----------+\n|DepartmentID|\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500>|StudentID |\n|DepartmentName|             |Name      |\n+------------+               |DepartmentID|\n     |                       +----------+\n     |                            |\n     |                            |\n     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n        One department has many students\n"})}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"example-many-to-many-relationship",children:"Example: Many-to-Many Relationship"}),"\n",(0,l.jsx)(e.p,{children:"Requires a junction/linking table:"}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"STUDENT"})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"StudentID (PK)"}),"\n",(0,l.jsx)(e.li,{children:"Name"}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"COURSE"})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"CourseID (PK)"}),"\n",(0,l.jsx)(e.li,{children:"Title"}),"\n"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"ENROLLMENT"})," (Junction Table)"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"StudentID (PK, FK)"}),"\n",(0,l.jsx)(e.li,{children:"CourseID (PK, FK)"}),"\n",(0,l.jsx)(e.li,{children:"Semester"}),"\n",(0,l.jsx)(e.li,{children:"Grade"}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:"A student can enroll in many courses, and a course can have many students."}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"Many-to-Many Relationship Diagram:"})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{children:"STUDENT                 ENROLLMENT                 COURSE\n+----------+            +------------+            +----------+\n|StudentID |<---------- |StudentID   |-----------\x3e|CourseID  |\n|Name      |            |CourseID    |            |Title     |\n+----------+            |Semester    |            +----------+\n                        |Grade       |\n                        +------------+\n"})}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"database-design-process",children:"Database Design Process"}),"\n",(0,l.jsxs)(e.ol,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Requirements Analysis"}),": Understand the problem domain"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Conceptual Design"}),": Create an ER (Entity-Relationship) diagram"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Logical Design"}),": Transform ER diagram into relational model"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Normalization"}),": Refine the logical model to minimize redundancy"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Physical Design"}),": Implement the database with specific DBMS features"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Implementation"}),": Create the database and load initial data"]}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"entity-relationship-er-modeling",children:"Entity-Relationship (ER) Modeling"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Graphical technique for representing database structure"}),"\n",(0,l.jsx)(e.li,{children:"Common notation: Chen notation, Crow's Foot notation"}),"\n",(0,l.jsxs)(e.li,{children:["Components:","\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Entities (rectangles)"}),"\n",(0,l.jsx)(e.li,{children:"Attributes (ovals)"}),"\n",(0,l.jsx)(e.li,{children:"Relationships (diamonds/lines)"}),"\n",(0,l.jsx)(e.li,{children:"Cardinality constraints (symbols on relationship lines)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"er-diagram-example",children:"ER Diagram Example"}),"\n",(0,l.jsx)(e.p,{children:"Library Management System:"}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"Library Management System ER Diagram:"})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{children:"                   writes\n    +--------+    +---------+    +------+\n    |        |----| AuthorID |----|      |\n    | AUTHOR |    | BookID   |    | BOOK |\n    |        |    +---------+    |      |\n    +--------+                   +------+\n        |                           |\n        |                           |\n        |                           |\n        |                           |\n        |                           |\n        |                borrows    |\n        |              +---------+  |\n        |              | MemberID|  |\n        |              | BookID  |  |\n        |              | DueDate |  |\n        |              +---------+  |\n        |                   |       |\n    +--------+              |  +------+\n    |        |              |  |      |\n    | MEMBER |--------------+  | LOAN |\n    |        |                 |      |\n    +--------+                 +------+\n"})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Entities"}),": Book, Author, Member, Loan"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Relationships"}),": writes (Author-Book), borrows (Member-Book)"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Attributes"}),": BookID, Title, AuthorID, Name, etc."]}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"converting-er-diagrams-to-relations",children:"Converting ER Diagrams to Relations"}),"\n",(0,l.jsxs)(e.ol,{children:["\n",(0,l.jsx)(e.li,{children:"Each entity type becomes a relation"}),"\n",(0,l.jsx)(e.li,{children:"Attributes of entity become attributes of relation"}),"\n",(0,l.jsx)(e.li,{children:"Primary key of entity becomes primary key of relation"}),"\n",(0,l.jsx)(e.li,{children:"1:1 relationships: Foreign key in either relation"}),"\n",(0,l.jsxs)(e.li,{children:["1",":N",' relationships: Foreign key in the "N" relation']}),"\n",(0,l.jsxs)(e.li,{children:["M",":N"," relationships: Create a new relation (junction table)"]}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"example-converting-er-to-relations",children:"Example: Converting ER to Relations"}),"\n",(0,l.jsx)(e.p,{children:"ER Diagram: Author (1) --- writes --- (N) Book"}),"\n",(0,l.jsx)(e.p,{children:"Becomes:"}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"AUTHOR"})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"AuthorID (PK)"}),"\n",(0,l.jsx)(e.li,{children:"Name"}),"\n",(0,l.jsx)(e.li,{children:"Birthdate"}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"BOOK"})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"BookID (PK)"}),"\n",(0,l.jsx)(e.li,{children:"Title"}),"\n",(0,l.jsx)(e.li,{children:"PublicationYear"}),"\n",(0,l.jsx)(e.li,{children:"AuthorID (FK)"}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"normalization",children:"Normalization"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Process of organizing data to minimize redundancy"}),"\n",(0,l.jsx)(e.li,{children:"Reduces anomalies (update, insert, delete)"}),"\n",(0,l.jsx)(e.li,{children:"Series of normal forms (1NF, 2NF, 3NF, BCNF, 4NF, 5NF)"}),"\n",(0,l.jsx)(e.li,{children:"Each form requires specific conditions"}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"first-normal-form-1nf",children:"First Normal Form (1NF)"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Each cell must contain a single atomic value"}),"\n",(0,l.jsx)(e.li,{children:"No repeating groups or arrays"}),"\n"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Not in 1NF"}),":"]}),"\n",(0,l.jsxs)(e.table,{children:[(0,l.jsx)(e.thead,{children:(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.th,{children:"StudentID"}),(0,l.jsx)(e.th,{children:"Name"}),(0,l.jsx)(e.th,{children:"Courses"})]})}),(0,l.jsxs)(e.tbody,{children:[(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:"S1"}),(0,l.jsx)(e.td,{children:"John"}),(0,l.jsx)(e.td,{children:"Math, Physics, Chemistry"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:"S2"}),(0,l.jsx)(e.td,{children:"Mary"}),(0,l.jsx)(e.td,{children:"Biology, English"})]})]})]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"In 1NF"}),":"]}),"\n",(0,l.jsxs)(e.table,{children:[(0,l.jsx)(e.thead,{children:(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.th,{children:"StudentID"}),(0,l.jsx)(e.th,{children:"Name"}),(0,l.jsx)(e.th,{children:"Course"})]})}),(0,l.jsxs)(e.tbody,{children:[(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:"S1"}),(0,l.jsx)(e.td,{children:"John"}),(0,l.jsx)(e.td,{children:"Math"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:"S1"}),(0,l.jsx)(e.td,{children:"John"}),(0,l.jsx)(e.td,{children:"Physics"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:"S1"}),(0,l.jsx)(e.td,{children:"John"}),(0,l.jsx)(e.td,{children:"Chemistry"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:"S2"}),(0,l.jsx)(e.td,{children:"Mary"}),(0,l.jsx)(e.td,{children:"Biology"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:"S2"}),(0,l.jsx)(e.td,{children:"Mary"}),(0,l.jsx)(e.td,{children:"English"})]})]})]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"second-normal-form-2nf",children:"Second Normal Form (2NF)"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Must be in 1NF"}),"\n",(0,l.jsx)(e.li,{children:"No partial dependencies (non-key attributes must depend on the entire primary key)"}),"\n"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Not in 2NF"}),":"]}),"\n",(0,l.jsxs)(e.table,{children:[(0,l.jsx)(e.thead,{children:(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.th,{children:"StudentID"}),(0,l.jsx)(e.th,{children:"CourseID"}),(0,l.jsx)(e.th,{children:"CourseName"}),(0,l.jsx)(e.th,{children:"Grade"})]})}),(0,l.jsxs)(e.tbody,{children:[(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:"S1"}),(0,l.jsx)(e.td,{children:"C1"}),(0,l.jsx)(e.td,{children:"Math"}),(0,l.jsx)(e.td,{children:"A"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:"S1"}),(0,l.jsx)(e.td,{children:"C2"}),(0,l.jsx)(e.td,{children:"Physics"}),(0,l.jsx)(e.td,{children:"B"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:"S2"}),(0,l.jsx)(e.td,{children:"C1"}),(0,l.jsx)(e.td,{children:"Math"}),(0,l.jsx)(e.td,{children:"C"})]})]})]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"In 2NF"}),":\n",(0,l.jsx)(e.strong,{children:"ENROLLMENT"}),":"]}),"\n",(0,l.jsxs)(e.table,{children:[(0,l.jsx)(e.thead,{children:(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.th,{children:"StudentID"}),(0,l.jsx)(e.th,{children:"CourseID"}),(0,l.jsx)(e.th,{children:"Grade"})]})}),(0,l.jsxs)(e.tbody,{children:[(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:"S1"}),(0,l.jsx)(e.td,{children:"C1"}),(0,l.jsx)(e.td,{children:"A"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:"S1"}),(0,l.jsx)(e.td,{children:"C2"}),(0,l.jsx)(e.td,{children:"B"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:"S2"}),(0,l.jsx)(e.td,{children:"C1"}),(0,l.jsx)(e.td,{children:"C"})]})]})]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"COURSE"}),":"]}),"\n",(0,l.jsxs)(e.table,{children:[(0,l.jsx)(e.thead,{children:(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.th,{children:"CourseID"}),(0,l.jsx)(e.th,{children:"CourseName"})]})}),(0,l.jsxs)(e.tbody,{children:[(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:"C1"}),(0,l.jsx)(e.td,{children:"Math"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:"C2"}),(0,l.jsx)(e.td,{children:"Physics"})]})]})]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"third-normal-form-3nf",children:"Third Normal Form (3NF)"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Must be in 2NF"}),"\n",(0,l.jsx)(e.li,{children:"No transitive dependencies (non-key attributes must not depend on other non-key attributes)"}),"\n"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Not in 3NF"}),":"]}),"\n",(0,l.jsxs)(e.table,{children:[(0,l.jsx)(e.thead,{children:(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.th,{children:"StudentID"}),(0,l.jsx)(e.th,{children:"DepartmentID"}),(0,l.jsx)(e.th,{children:"DepartmentName"}),(0,l.jsx)(e.th,{children:"Advisor"})]})}),(0,l.jsxs)(e.tbody,{children:[(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:"S1"}),(0,l.jsx)(e.td,{children:"D1"}),(0,l.jsx)(e.td,{children:"Computer Sci"}),(0,l.jsx)(e.td,{children:"Prof. Smith"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:"S2"}),(0,l.jsx)(e.td,{children:"D2"}),(0,l.jsx)(e.td,{children:"Physics"}),(0,l.jsx)(e.td,{children:"Prof. Jones"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:"S3"}),(0,l.jsx)(e.td,{children:"D1"}),(0,l.jsx)(e.td,{children:"Computer Sci"}),(0,l.jsx)(e.td,{children:"Prof. Smith"})]})]})]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"In 3NF"}),":\n",(0,l.jsx)(e.strong,{children:"STUDENT"}),":"]}),"\n",(0,l.jsxs)(e.table,{children:[(0,l.jsx)(e.thead,{children:(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.th,{children:"StudentID"}),(0,l.jsx)(e.th,{children:"DepartmentID"}),(0,l.jsx)(e.th,{children:"Advisor"})]})}),(0,l.jsxs)(e.tbody,{children:[(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:"S1"}),(0,l.jsx)(e.td,{children:"D1"}),(0,l.jsx)(e.td,{children:"Prof. Smith"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:"S2"}),(0,l.jsx)(e.td,{children:"D2"}),(0,l.jsx)(e.td,{children:"Prof. Jones"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:"S3"}),(0,l.jsx)(e.td,{children:"D1"}),(0,l.jsx)(e.td,{children:"Prof. Smith"})]})]})]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"DEPARTMENT"}),":"]}),"\n",(0,l.jsxs)(e.table,{children:[(0,l.jsx)(e.thead,{children:(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.th,{children:"DepartmentID"}),(0,l.jsx)(e.th,{children:"DepartmentName"})]})}),(0,l.jsxs)(e.tbody,{children:[(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:"D1"}),(0,l.jsx)(e.td,{children:"Computer Sci"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:"D2"}),(0,l.jsx)(e.td,{children:"Physics"})]})]})]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"denormalization",children:"Denormalization"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Strategic decision to allow redundancy for performance"}),"\n",(0,l.jsx)(e.li,{children:"Used when query performance outweighs update concerns"}),"\n",(0,l.jsx)(e.li,{children:"Common in data warehousing and reporting databases"}),"\n"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Example"}),": Denormalized student enrollment information for reporting"]}),"\n",(0,l.jsxs)(e.table,{children:[(0,l.jsx)(e.thead,{children:(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.th,{children:"StudentID"}),(0,l.jsx)(e.th,{children:"StudentName"}),(0,l.jsx)(e.th,{children:"CourseID"}),(0,l.jsx)(e.th,{children:"CourseName"}),(0,l.jsx)(e.th,{children:"Instructor"}),(0,l.jsx)(e.th,{children:"Grade"})]})}),(0,l.jsxs)(e.tbody,{children:[(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:"S1"}),(0,l.jsx)(e.td,{children:"John"}),(0,l.jsx)(e.td,{children:"C1"}),(0,l.jsx)(e.td,{children:"Math"}),(0,l.jsx)(e.td,{children:"Prof. Smith"}),(0,l.jsx)(e.td,{children:"A"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:"S1"}),(0,l.jsx)(e.td,{children:"John"}),(0,l.jsx)(e.td,{children:"C2"}),(0,l.jsx)(e.td,{children:"Physics"}),(0,l.jsx)(e.td,{children:"Prof. Jones"}),(0,l.jsx)(e.td,{children:"B"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:"S2"}),(0,l.jsx)(e.td,{children:"Mary"}),(0,l.jsx)(e.td,{children:"C1"}),(0,l.jsx)(e.td,{children:"Math"}),(0,l.jsx)(e.td,{children:"Prof. Smith"}),(0,l.jsx)(e.td,{children:"C"})]})]})]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"constraints-in-relational-model",children:"Constraints in Relational Model"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Domain Constraints"}),": Valid values for attributes"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Key Constraints"}),": Uniqueness of primary keys"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Entity Integrity"}),": Primary key values cannot be null"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Referential Integrity"}),": Foreign keys must match existing primary keys or be null"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"CHECK Constraints"}),": Custom validation rules"]}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"example-database-schema-with-constraints",children:"Example Database Schema with Constraints"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-sql",children:"CREATE TABLE Department (\n    DeptID INT PRIMARY KEY,\n    DeptName VARCHAR(50) NOT NULL UNIQUE,\n    Budget DECIMAL(15,2) CHECK (Budget > 0)\n);\n\nCREATE TABLE Employee (\n    EmpID INT PRIMARY KEY,\n    Name VARCHAR(100) NOT NULL,\n    Salary DECIMAL(10,2) CHECK (Salary >= 0),\n    DeptID INT,\n    FOREIGN KEY (DeptID) REFERENCES Department(DeptID)\n);\n"})}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"real-world-example-e-commerce-database",children:"Real-World Example: E-Commerce Database"}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"CUSTOMER"})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"CustomerID (PK)"}),"\n",(0,l.jsx)(e.li,{children:"Name"}),"\n",(0,l.jsx)(e.li,{children:"Email"}),"\n",(0,l.jsx)(e.li,{children:"Address"}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"PRODUCT"})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"ProductID (PK)"}),"\n",(0,l.jsx)(e.li,{children:"Name"}),"\n",(0,l.jsx)(e.li,{children:"Description"}),"\n",(0,l.jsx)(e.li,{children:"Price"}),"\n",(0,l.jsx)(e.li,{children:"StockQuantity"}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"ORDER"})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"OrderID (PK)"}),"\n",(0,l.jsx)(e.li,{children:"CustomerID (FK)"}),"\n",(0,l.jsx)(e.li,{children:"OrderDate"}),"\n",(0,l.jsx)(e.li,{children:"Status"}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"ORDER_ITEM"})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"OrderID (PK, FK)"}),"\n",(0,l.jsx)(e.li,{children:"ProductID (PK, FK)"}),"\n",(0,l.jsx)(e.li,{children:"Quantity"}),"\n",(0,l.jsx)(e.li,{children:"UnitPrice"}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"best-practices-in-relational-modeling",children:"Best Practices in Relational Modeling"}),"\n",(0,l.jsxs)(e.ol,{children:["\n",(0,l.jsx)(e.li,{children:"Choose meaningful entity and attribute names"}),"\n",(0,l.jsx)(e.li,{children:"Assign appropriate data types and constraints"}),"\n",(0,l.jsx)(e.li,{children:"Use surrogate keys (e.g., auto-increment IDs) for stability"}),"\n",(0,l.jsx)(e.li,{children:"Normalize to at least 3NF for OLTP systems"}),"\n",(0,l.jsx)(e.li,{children:"Document relationships and constraints"}),"\n",(0,l.jsx)(e.li,{children:"Consider performance implications for large datasets"}),"\n",(0,l.jsx)(e.li,{children:"Validate the model with sample queries and use cases"}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"relational-model-advantages",children:"Relational Model Advantages"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Data Independence"}),": Physical storage details are hidden"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Simple Structure"}),": Tables are easy to understand"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Flexibility"}),": Ad-hoc queries via SQL"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Data Integrity"}),": Constraints ensure valid data"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Consistency"}),": Reduced redundancy through normalization"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Security"}),": Access control at various levels"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Standardization"}),": SQL is widely adopted"]}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"common-challenges-in-relational-modeling",children:"Common Challenges in Relational Modeling"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Modeling hierarchical or network structures"}),"\n",(0,l.jsx)(e.li,{children:"Handling many-to-many relationships efficiently"}),"\n",(0,l.jsx)(e.li,{children:"Balancing normalization against performance"}),"\n",(0,l.jsx)(e.li,{children:"Managing temporal data and historical changes"}),"\n",(0,l.jsx)(e.li,{children:"Scaling with very large datasets (big data)"}),"\n",(0,l.jsx)(e.li,{children:"Object-relational impedance mismatch"}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"beyond-traditional-relational-model",children:"Beyond Traditional Relational Model"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Object-Relational Databases"}),": Extend relational model with object-oriented features"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"NoSQL Databases"}),": Alternative models for specific use cases","\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Document stores (MongoDB)"}),"\n",(0,l.jsx)(e.li,{children:"Graph databases (Neo4j)"}),"\n",(0,l.jsx)(e.li,{children:"Key-value stores (Redis)"}),"\n",(0,l.jsx)(e.li,{children:"Column-family stores (Cassandra)"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"NewSQL"}),": Combining relational guarantees with NoSQL scalability"]}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"summary",children:"Summary"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Relational modeling organizes data into related tables"}),"\n",(0,l.jsx)(e.li,{children:"Tables are connected through keys (primary and foreign)"}),"\n",(0,l.jsx)(e.li,{children:"Entity-relationship diagrams help visualize database structure"}),"\n",(0,l.jsx)(e.li,{children:"Normalization reduces redundancy and anomalies"}),"\n",(0,l.jsxs)(e.li,{children:["Different types of relationships (1:1, 1",":N",", M",":N",") require different modeling approaches"]}),"\n",(0,l.jsx)(e.li,{children:"Constraints ensure data integrity"}),"\n",(0,l.jsx)(e.li,{children:"The relational model balances structure, integrity, and flexibility"}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"practice-exercises",children:"Practice Exercises"}),"\n",(0,l.jsxs)(e.ol,{children:["\n",(0,l.jsx)(e.li,{children:"Design a relational model for a simple university system."}),"\n",(0,l.jsx)(e.li,{children:"Convert the following ER diagram to a relational schema: [Placeholder for ER diagram]"}),"\n",(0,l.jsx)(e.li,{children:"Identify normalization problems in the following table and decompose it into 3NF."}),"\n",(0,l.jsx)(e.li,{children:"Design a database schema for a hospital management system with at least 5 entities."}),"\n"]})]})}function o(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,l.jsx)(e,{...n,children:(0,l.jsx)(c,{...n})}):c(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>t,x:()=>d});var s=i(6540);const l={},r=s.createContext(l);function t(n){const e=s.useContext(r);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(l):n.components||l:t(n.components),s.createElement(r.Provider,{value:e},n.children)}}}]);